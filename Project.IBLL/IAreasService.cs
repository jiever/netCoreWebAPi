//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//     生成时间 05/03/2018 18:58:49 By 朱峰
//     对此文件的更改可能会导致不正确的行为，并且如果
//     文件已存在，不会覆盖。
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using Project.Common;
using Project.Model;
using Project.Model.Conditions;
using Project.Model.Dtos;

namespace Project.IBLL
{
    public interface IAreasService
    {
        /// <summary>
        /// 新增Areas
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        int Insert(Areas entity);

        /// <summary>
        ///     批量新增Areas
        /// </summary>
        /// <param name="entitys"></param>
        /// <returns></returns>
        bool Insert(List<Areas> entitys);

        /// <summary>
        /// 更新产品
        /// </summary>
        /// <returns></returns>
        bool Update(Areas entity);

        /// <summary>
        /// 批量更新(不使用事务)
        /// </summary>
        /// <param name="entitys"></param>
        /// <returns></returns>
        bool Update(List<Areas> entitys);

        /// <summary>
        /// 逻辑删除Areas
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        bool SoftDelete(int id);

        /// <summary>
        /// 批量逻辑删除Areas(不使用事务)
        /// </summary>
        /// <param name="ids"></param>
        /// <returns></returns>
        bool SoftDelete(List<int> ids);

        /// <summary>
        /// 判断Areas是否存在
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        bool Exists(int id);

        /// <summary>
        ///     根据主键获取Areas
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        Areas GetByPk(int id);

        /// <summary>
        ///     根据主键获取Areas集合
        /// </summary>
        /// <param name="ids"></param>
        /// <returns></returns>
        List<Areas> GetList(List<int> ids);

        /// <summary>
        ///     分页方法
        /// </summary>
        /// <param name="page"></param>
        /// <param name="size"></param>
        /// <param name="sort"></param>
        /// <param name="condition"></param>
        /// <returns></returns>
        PageModel<Areas> GetByPage(int page, int size, string sort, AreasCondition condition);
        /// <summary>
        /// 根据参数获取地点
        /// </summary>
        /// <param name="condition"></param>
        /// <returns></returns>
        List<Areas> GetByParameters(AreasCondition condition);
        /// <summary>
        /// 根据地区id获取完整地区信息
        /// </summary>
        /// <param name="id">地区id</param>
        /// <returns></returns>
        FullAreaDto GetFullByAreaID(int id);
        /// <summary>
        /// 根据地区id获取所有子地区信息
        /// </summary>
        /// <param name="parentAreaID">地区id</param>
        /// <param name="isContainParent">结果集是否包含父地区</param>
        /// <returns></returns>
        List<Areas> GetAreasByParentAreaID(int parentAreaID, bool isContainParent);
    }
}
